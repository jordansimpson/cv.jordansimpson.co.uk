/*
*
* The Frontly Framework is a Sass based, OOCSS, front-end framework that 
* utilises the using Gulp.js task runner that provides all projects with a 
* great starting platform.
*
* It is also based around the ITCSS(Inverted Triangle CSS) methodology 
* that has been coined by Harry Roberts (@csswizardy) which you will be able 
* to find out more soon I'm sure at http://itcss.io/ or by watch one of 
* Harry's talks - https://www.youtube.com/watch?v=1OKZOV-iLj4
*
*/
/* 
------------
SETTINGS.
------------
The settings files are built up of numerous global variables to be used within a range of different situations. From setting the border colors of inputs by using the or altering the $border-clr variable or by adding a padding by using one of the $spacer variables. Feel free to amend the variables values as you see fit or add you own.
------------ 
*/
/* 
------------
SETTINGS.
BREAKPOINTS
------------ 
*/
/* 
------------
SETTINGS.
COLORS
------------ 
*/
/* 
------------
SETTINGS.
SPACERS
------------ 
*/
/* 
------------
SETTINGS.
TYPOGRAPHY
------------ 
*/
/* 
------------
SETTINGS.
Z-INDEX
------------ 
*/
/* 
------------
TOOLS.
------------ 
The tools files consist of a number of useful functions and mixins that are used throughout the framework and can be utilised to build new components.
------------ 
*/
/*
Animate.css - http://daneden.me/animate
Licensed under the MIT license - http://opensource.org/licenses/MIT

Copyright (c) 2015 Daniel Eden
*/
.animated {
  animation-duration: 1s;
  animation-fill-mode: both; }

.animated.infinite {
  animation-iteration-count: infinite; }

.animated.hinge {
  animation-duration: 2s; }

.animated.bounceIn,
.animated.bounceOut {
  animation-duration: .75s; }

.animated.flipOutX,
.animated.flipOutY {
  animation-duration: .75s; }

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0); }
  40%, 43% {
    transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -30px, 0); }
  70% {
    transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -15px, 0); }
  90% {
    transform: translate3d(0, -4px, 0); } }

.bounce {
  animation-name: bounce;
  -ms-transform-origin: center bottom;
  transform-origin: center bottom; }

@keyframes flash {
  0%, 50%, 100% {
    opacity: 1; }
  25%, 75% {
    opacity: 0; } }

.flash {
  animation-name: flash; }

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes pulse {
  0% {
    transform: scale3d(1, 1, 1); }
  50% {
    transform: scale3d(1.05, 1.05, 1.05); }
  100% {
    transform: scale3d(1, 1, 1); } }

.pulse {
  animation-name: pulse; }

@keyframes rubberBand {
  0% {
    transform: scale3d(1, 1, 1); }
  30% {
    transform: scale3d(1.25, 0.75, 1); }
  40% {
    transform: scale3d(0.75, 1.25, 1); }
  50% {
    transform: scale3d(1.15, 0.85, 1); }
  65% {
    transform: scale3d(0.95, 1.05, 1); }
  75% {
    transform: scale3d(1.05, 0.95, 1); }
  100% {
    transform: scale3d(1, 1, 1); } }

.rubberBand {
  animation-name: rubberBand; }

@keyframes shake {
  0%, 100% {
    transform: translate3d(0, 0, 0); }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0); }
  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0); } }

.shake {
  animation-name: shake; }

@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg); }
  40% {
    transform: rotate3d(0, 0, 1, -10deg); }
  60% {
    transform: rotate3d(0, 0, 1, 5deg); }
  80% {
    transform: rotate3d(0, 0, 1, -5deg); }
  100% {
    transform: rotate3d(0, 0, 1, 0deg); } }

.swing {
  -ms-transform-origin: top center;
  transform-origin: top center;
  animation-name: swing; }

@keyframes tada {
  0% {
    transform: scale3d(1, 1, 1); }
  10%, 20% {
    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg); }
  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg); }
  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg); }
  100% {
    transform: scale3d(1, 1, 1); } }

.tada {
  animation-name: tada; }

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes wobble {
  0% {
    transform: none; }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg); }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg); }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg); }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg); }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg); }
  100% {
    transform: none; } }

.wobble {
  animation-name: wobble; }

@keyframes bounceIn {
  0%, 20%, 40%, 60%, 80%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3); }
  20% {
    transform: scale3d(1.1, 1.1, 1.1); }
  40% {
    transform: scale3d(0.9, 0.9, 0.9); }
  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03); }
  80% {
    transform: scale3d(0.97, 0.97, 0.97); }
  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1); } }

.bounceIn {
  animation-name: bounceIn; }

@keyframes bounceInDown {
  0%, 60%, 75%, 90%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0); }
  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0); }
  75% {
    transform: translate3d(0, -10px, 0); }
  90% {
    transform: translate3d(0, 5px, 0); }
  100% {
    transform: none; } }

.bounceInDown {
  animation-name: bounceInDown; }

@keyframes bounceInLeft {
  0%, 60%, 75%, 90%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0); }
  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0); }
  75% {
    transform: translate3d(-10px, 0, 0); }
  90% {
    transform: translate3d(5px, 0, 0); }
  100% {
    transform: none; } }

.bounceInLeft {
  animation-name: bounceInLeft; }

@keyframes bounceInRight {
  0%, 60%, 75%, 90%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(3000px, 0, 0); }
  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0); }
  75% {
    transform: translate3d(10px, 0, 0); }
  90% {
    transform: translate3d(-5px, 0, 0); }
  100% {
    transform: none; } }

.bounceInRight {
  animation-name: bounceInRight; }

@keyframes bounceInUp {
  0%, 60%, 75%, 90%, 100% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(0, 3000px, 0); }
  60% {
    opacity: 1;
    transform: translate3d(0, -20px, 0); }
  75% {
    transform: translate3d(0, 10px, 0); }
  90% {
    transform: translate3d(0, -5px, 0); }
  100% {
    transform: translate3d(0, 0, 0); } }

.bounceInUp {
  animation-name: bounceInUp; }

@keyframes bounceOut {
  20% {
    transform: scale3d(0.9, 0.9, 0.9); }
  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1); }
  100% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3); } }

.bounceOut {
  animation-name: bounceOut; }

@keyframes bounceOutDown {
  20% {
    transform: translate3d(0, 10px, 0); }
  40%, 45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0); }
  100% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0); } }

.bounceOutDown {
  animation-name: bounceOutDown; }

@keyframes bounceOutLeft {
  20% {
    opacity: 1;
    transform: translate3d(20px, 0, 0); }
  100% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0); } }

.bounceOutLeft {
  animation-name: bounceOutLeft; }

@keyframes bounceOutRight {
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0); }
  100% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0); } }

.bounceOutRight {
  animation-name: bounceOutRight; }

@keyframes bounceOutUp {
  20% {
    transform: translate3d(0, -10px, 0); }
  40%, 45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0); }
  100% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0); } }

.bounceOutUp {
  animation-name: bounceOutUp; }

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

.fadeIn {
  animation-name: fadeIn; }

@keyframes fadeInDown {
  0% {
    opacity: 0;
    transform: translate3d(0, -100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInDown {
  animation-name: fadeInDown; }

@keyframes fadeInDownBig {
  0% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInDownBig {
  animation-name: fadeInDownBig; }

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInLeft {
  animation-name: fadeInLeft; }

@keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInLeftBig {
  animation-name: fadeInLeftBig; }

@keyframes fadeInRight {
  0% {
    opacity: 0;
    transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInRight {
  animation-name: fadeInRight; }

@keyframes fadeInRightBig {
  0% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInRightBig {
  animation-name: fadeInRightBig; }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInUp {
  animation-name: fadeInUp; }

@keyframes fadeInUpBig {
  0% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInUpBig {
  animation-name: fadeInUpBig; }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

.fadeOut {
  animation-name: fadeOut; }

@keyframes fadeOutDown {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); } }

.fadeOutDown {
  animation-name: fadeOutDown; }

@keyframes fadeOutDownBig {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0); } }

.fadeOutDownBig {
  animation-name: fadeOutDownBig; }

@keyframes fadeOutLeft {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0); } }

.fadeOutLeft {
  animation-name: fadeOutLeft; }

@keyframes fadeOutLeftBig {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0); } }

.fadeOutLeftBig {
  animation-name: fadeOutLeftBig; }

@keyframes fadeOutRight {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0); } }

.fadeOutRight {
  animation-name: fadeOutRight; }

@keyframes fadeOutRightBig {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0); } }

.fadeOutRightBig {
  animation-name: fadeOutRightBig; }

@keyframes fadeOutUp {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(0, -100%, 0); } }

.fadeOutUp {
  animation-name: fadeOutUp; }

@keyframes fadeOutUpBig {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0); } }

.fadeOutUpBig {
  animation-name: fadeOutUpBig; }

@keyframes flip {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out; }
  40% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out; }
  50% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in; }
  80% {
    transform: perspective(400px) scale3d(0.95, 0.95, 0.95);
    animation-timing-function: ease-in; }
  100% {
    transform: perspective(400px);
    animation-timing-function: ease-in; } }

.animated.flip {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  animation-name: flip; }

@keyframes flipInX {
  0% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0; }
  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transition-timing-function: ease-in; }
  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1; }
  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg); }
  100% {
    transform: perspective(400px); } }

.flipInX {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInX; }

@keyframes flipInY {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0; }
  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    transition-timing-function: ease-in; }
  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1; }
  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg); }
  100% {
    transform: perspective(400px); } }

.flipInY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInY; }

@keyframes flipOutX {
  0% {
    transform: perspective(400px); }
  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1; }
  100% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0; } }

.flipOutX {
  animation-name: flipOutX;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important; }

@keyframes flipOutY {
  0% {
    transform: perspective(400px); }
  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1; }
  100% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0; } }

.flipOutY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipOutY; }

@keyframes lightSpeedIn {
  0% {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0; }
  60% {
    transform: skewX(20deg);
    opacity: 1; }
  80% {
    transform: skewX(-5deg);
    opacity: 1; }
  100% {
    transform: none;
    opacity: 1; } }

.lightSpeedIn {
  animation-name: lightSpeedIn;
  animation-timing-function: ease-out; }

@keyframes lightSpeedOut {
  0% {
    opacity: 1; }
  100% {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0; } }

.lightSpeedOut {
  animation-name: lightSpeedOut;
  animation-timing-function: ease-in; }

@keyframes rotateIn {
  0% {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0; }
  100% {
    transform-origin: center;
    transform: none;
    opacity: 1; } }

.rotateIn {
  animation-name: rotateIn; }

@keyframes rotateInDownLeft {
  0% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0; }
  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1; } }

.rotateInDownLeft {
  animation-name: rotateInDownLeft; }

@keyframes rotateInDownRight {
  0% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0; }
  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1; } }

.rotateInDownRight {
  animation-name: rotateInDownRight; }

@keyframes rotateInUpLeft {
  0% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0; }
  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1; } }

.rotateInUpLeft {
  animation-name: rotateInUpLeft; }

@keyframes rotateInUpRight {
  0% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0; }
  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1; } }

.rotateInUpRight {
  animation-name: rotateInUpRight; }

@keyframes rotateOut {
  0% {
    transform-origin: center;
    opacity: 1; }
  100% {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0; } }

.rotateOut {
  animation-name: rotateOut; }

@keyframes rotateOutDownLeft {
  0% {
    transform-origin: left bottom;
    opacity: 1; }
  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0; } }

.rotateOutDownLeft {
  animation-name: rotateOutDownLeft; }

@keyframes rotateOutDownRight {
  0% {
    transform-origin: right bottom;
    opacity: 1; }
  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0; } }

.rotateOutDownRight {
  animation-name: rotateOutDownRight; }

@keyframes rotateOutUpLeft {
  0% {
    transform-origin: left bottom;
    opacity: 1; }
  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0; } }

.rotateOutUpLeft {
  animation-name: rotateOutUpLeft; }

@keyframes rotateOutUpRight {
  0% {
    transform-origin: right bottom;
    opacity: 1; }
  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0; } }

.rotateOutUpRight {
  animation-name: rotateOutUpRight; }

@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out; }
  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out; }
  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1; }
  100% {
    transform: translate3d(0, 700px, 0);
    opacity: 0; } }

.hinge {
  animation-name: hinge; }

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollIn {
  0% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg); }
  100% {
    opacity: 1;
    transform: none; } }

.rollIn {
  animation-name: rollIn; }

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg); } }

.rollOut {
  animation-name: rollOut; }

@keyframes zoomIn {
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3); }
  50% {
    opacity: 1; } }

.zoomIn {
  animation-name: zoomIn; }

@keyframes zoomInDown {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomInDown {
  animation-name: zoomInDown; }

@keyframes zoomInLeft {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomInLeft {
  animation-name: zoomInLeft; }

@keyframes zoomInRight {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomInRight {
  animation-name: zoomInRight; }

@keyframes zoomInUp {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomInUp {
  animation-name: zoomInUp; }

@keyframes zoomOut {
  0% {
    opacity: 1; }
  50% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3); }
  100% {
    opacity: 0; } }

.zoomOut {
  animation-name: zoomOut; }

@keyframes zoomOutDown {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  100% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomOutDown {
  animation-name: zoomOutDown; }

@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0); }
  100% {
    opacity: 0;
    transform: scale(0.1) translate3d(-2000px, 0, 0);
    transform-origin: left center; } }

.zoomOutLeft {
  animation-name: zoomOutLeft; }

@keyframes zoomOutRight {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0); }
  100% {
    opacity: 0;
    transform: scale(0.1) translate3d(2000px, 0, 0);
    transform-origin: right center; } }

.zoomOutRight {
  animation-name: zoomOutRight; }

@keyframes zoomOutUp {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  100% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1); } }

.zoomOutUp {
  animation-name: zoomOutUp; }

@keyframes slideInDown {
  0% {
    transform: translate3d(0, -100%, 0);
    visibility: visible; }
  100% {
    transform: translate3d(0, 0, 0); } }

.slideInDown {
  animation-name: slideInDown; }

@keyframes slideInLeft {
  0% {
    transform: translate3d(-100%, 0, 0);
    visibility: visible; }
  100% {
    transform: translate3d(0, 0, 0); } }

.slideInLeft {
  animation-name: slideInLeft; }

@keyframes slideInRight {
  0% {
    transform: translate3d(100%, 0, 0);
    visibility: visible; }
  100% {
    transform: translate3d(0, 0, 0); } }

.slideInRight {
  animation-name: slideInRight; }

@keyframes slideInUp {
  0% {
    transform: translate3d(0, 100%, 0);
    visibility: visible; }
  100% {
    transform: translate3d(0, 0, 0); } }

.slideInUp {
  animation-name: slideInUp; }

@keyframes slideOutDown {
  0% {
    transform: translate3d(0, 0, 0); }
  100% {
    visibility: hidden;
    transform: translate3d(0, 100%, 0); } }

.slideOutDown {
  animation-name: slideOutDown; }

@keyframes slideOutLeft {
  0% {
    transform: translate3d(0, 0, 0); }
  100% {
    visibility: hidden;
    transform: translate3d(-100%, 0, 0); } }

.slideOutLeft {
  animation-name: slideOutLeft; }

@keyframes slideOutRight {
  0% {
    transform: translate3d(0, 0, 0); }
  100% {
    visibility: hidden;
    transform: translate3d(100%, 0, 0); } }

.slideOutRight {
  animation-name: slideOutRight; }

@keyframes slideOutUp {
  0% {
    transform: translate3d(0, 0, 0); }
  100% {
    visibility: hidden;
    transform: translate3d(0, -100%, 0); } }

.slideOutUp {
  animation-name: slideOutUp; }

/* 
------------
TOOLS.
FUNCTIONS
------------ 
*/
/*
Set contrast color function.
----------------------------
* Setting a contrasting color can be a pain sometimes if you don't know what color you're going to use. This function helps deal with the use of color variables and check the contrast of the colors.
*/
/* 
------------
TOOLS.
GRID
------------ 
*/
/**
*
* Grids are great for structuring a websites layout so the mixins below enable 
* you to utilise a grid system symantically or, if you wish to, you can use 
* the grid system that has been put together in the _objects.grid.scss file.
* 
* Frontly by default utlises a 8 column grid but this can be amended by 
* changing the $grid-column-count variable in the _settings.grid.scss file.
*
*
*/
.badge, .button {
  padding: 16px;
  padding: 1rem;
  margin-right: 16px;
  margin-right: 1rem;
  margin-bottom: 16px;
  margin-bottom: 1rem;
  transition: 0.25s;
  background: #f7544c;
  color: #ffffff;
  text-align: center;
  vertical-align: middle;
  line-height: 1;
  letter-spacing: .05rem;
  text-decoration: none;
  display: inline-block; }

.button--smooth {
  border-radius: 4px; }

/* 
------------
GENERIC.
------------ 
The generic files are what they say on the tin. They are the basic starting generic stylings that set the basis of the framework, starting with the css reset to remove browser specific styling.
------------ 
*/
/* 
------------
GENERIC.
RESET
------------ 
*/
html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote,
pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small,
strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label,
legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside,
canvas, details, figcaption, figure, footer, header, hgroup, menu, nav,
section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

body {
  line-height: 1; }

article, aside, details, figcaption, figure, footer, header, hgroup,
menu, nav, section {
  display: block; }

nav ul {
  list-style: none; }

blockquote {
  quotes: none; }

blockquote:before, blockquote:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* 
change border colour to suit your needs 
*/
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 16px 0;
  margin: 1rem 0;
  padding: 0; }

/* 
------------
GENERIC.
BOX-SIZING
------------ 
*/
*, *:before, *:after {
  box-sizing: border-box; }

/* 
------------
GENERIC.
PAGE
------------ 
*/
html, body {
  background: #fff;
  color: #1B1B2B;
  font-size: 16px;
  font-size: 16px;
  font-size: 1rem;
  font-family: "Lato", Arial, sans-serif;
  height: 100%;
  -webkit-font-smoothing: antialiased; }

.wrapper {
  width: auto;
  max-width: 1200px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding: 0 20px;
  clear: both; }
  .wrapper:before, .wrapper:after {
    display: table;
    content: ""; }
  @media only screen and (max-width: 960px) {
    .wrapper {
      padding: 0 32px; } }

/* 
------------
BASE.
------------ 
The base files consist of the general styling that has been set after the generic files have done their job. This helps to set things back in a more structured and globally consistant manor.
------------ 
*/
/* 
------------
BASE.
FORMS
------------ 
*/
label,
legend {
  display: block;
  cursor: pointer;
  margin-bottom: 5px;
  margin-bottom: 0.3125rem; }

input:not([type=button]):not([type=reset]):not([type=submit]),
select, textarea {
  vertical-align: middle;
  border: 1px solid #f6f6f6;
  margin-bottom: 10px;
  margin-bottom: 0.625rem;
  font-size: 16px;
  font-size: 1rem; }

input[type=email],
input[type=file],
input[type=password],
input[type=search],
input[type=tel],
input[type=text] {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: none;
  color: #1B1B2B;
  display: block;
  width: 100%;
  padding: 5px;
  padding: 0.3125rem; }

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  vertical-align: middle;
  cursor: pointer;
  float: left;
  letter-spacing: 0;
  font-size: 16px;
  font-size: 1rem; }

select,
option {
  cursor: pointer;
  padding: 5px;
  padding: 0.3125rem; }

textarea {
  width: 100%;
  max-width: 100%;
  vertical-align: top;
  padding: 10px;
  padding: 0.625rem; }

/* 
------------
BASE.
IMAGES
------------ 
*/
/*
Adding padding to ul and ol elements
*/
img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

img[width], img[height] {
  max-width: 0; }

figure {
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

figure img {
  margin-bottom: 0;
  width: 100%; }

figcaption {
  border-bottom: 1px dotted #f6f6f6;
  float: left;
  width: 100%;
  padding-top: 10px;
  padding-top: 0.625rem;
  padding-bottom: 10px;
  padding-bottom: 0.625rem; }

/* 
------------
BASE.
LISTS
------------ 
*/
ul, ol {
  padding-left: 20px;
  padding-left: 1.25rem;
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

dl {
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

dt {
  font-weight: 700; }

/* 
------------
BASE.
TABLES
------------ 
*/
table, tbody {
  width: 100%;
  text-align: left;
  margin-bottom: 10px; }

caption {
  text-align: left; }

/* 
------------
BASE.
TYPOGRAPHY
------------ 
*/
h1, h2, h3, h4, h5 {
  margin-bottom: 10px;
  margin-bottom: 0.625rem;
  color: #f7544c;
  font-weight: 900; }

h1 {
  font-size: 40px;
  font-size: 2.5rem; }

h2 {
  font-size: 40px;
  font-size: 2.5rem; }

h3 {
  font-size: 32px;
  font-size: 2rem; }

h4 {
  font-size: 24px;
  font-size: 1.5rem; }

h5 {
  font-size: 20px;
  font-size: 1.25rem; }

.sub-header {
  color: #8d8db8; }

p {
  margin-bottom: 16px;
  margin-bottom: 1rem;
  line-height: 1.414; }

small, .small-print {
  font-size: 12px;
  font-size: 0.75rem; }

strong {
  font-weight: 900; }

a {
  margin: 0;
  padding: 0;
  vertical-align: baseline;
  background: transparent;
  color: #ED4466;
  text-decoration: underline; }
  a:hover {
    color: #e81640; }

sup, sub {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 0;
  position: relative; }

sup {
  bottom: -3px;
  bottom: -0.1875rem; }

sub {
  top: -5px;
  top: -0.3125rem; }

del {
  text-decoration: line-through;
  color: #8d8db8; }

u, ins {
  text-decoration: underline; }

blockquote {
  display: block;
  font-size: 24px;
  font-size: 1.5rem;
  padding-left: 20px;
  padding-left: 1.25rem;
  margin-top: 20px;
  margin-top: 1.25rem;
  margin-bottom: 20px;
  margin-bottom: 1.25rem;
  line-height: 1.4;
  border-left: 1px solid #f6f6f6; }
  blockquote small {
    font-style: normal;
    display: block;
    font-size: 12px;
    font-size: 0.75rem;
    margin-top: 10px;
    margin-top: 0.625rem;
    color: #8d8db8; }

q {
  quotes: "'" "'"; }

q:before {
  content: open-quotes; }

q:after {
  content: close-quote; }

cite {
  font-weight: 700;
  font-style: italic; }

abbr {
  text-transform: uppercase; }

mark {
  background: #fff9B7; }

pre {
  background: #f6f6f6;
  border: 1px solid #ccc;
  white-space: pre-wrap;
  float: left;
  display: block;
  padding: 10px;
  overflow: scroll; }

/* 
------------
OBJECTS.
------------ 
The object files consist of styling for non specific UI blocks e.g. lists. These help to enable you to create customised components with useful present structure.
------------ 
*/
/* 
------------
OBJECT.
BLOCKQUOTES
------------ 
*/
.color-quote {
  border-left: 5px solid #ED4466;
  position: relative;
  font-family: Georgia, "Times New Roman", serif;
  font-size: 32px;
  font-size: 2rem; }
  .color-quote small {
    font-family: "Lato", Arial, sans-serif; }
  .color-quote:before {
    content: '\201C';
    position: absolute;
    top: 0;
    left: -10px;
    color: #ED4466;
    background: #fff;
    padding-top: 17px;
    padding-top: 1.0625rem;
    padding-right: 3px;
    padding-right: 0.1875rem;
    padding-left: 3px;
    padding-left: 0.1875rem;
    font-size: 40px;
    font-size: 2.5rem;
    line-height: 10px;
    line-height: 0.625rem; }

/* 
------------
OBJECTS.
DROPDOWNS
------------ 
*/
.dropdown {
  position: relative; }
  .dropdown a {
    text-decoration: none; }
  .dropdown ul {
    display: none;
    position: absolute;
    background: #fff;
    left: 0;
    z-index: 1; }
  .dropdown li {
    width: 100%;
    float: left;
    position: relative; }
    .dropdown li:hover > ul {
      display: block;
      position: absolute;
      left: 100%;
      top: 0; }
  .dropdown:hover > ul {
    display: block;
    position: absolute; }

/* 
------------
OBJECTS.
LISTS
------------ 
*/
/*
Remove all styling from lists by adding the .no-points class below
*/
.list--unstyled, .list--inline, .list--pills, .list--stacked {
  list-style-type: none;
  padding-left: 0; }

/*
There are various list styles and the classes are below to enable you to utilise them.
*/
.list--numbered {
  list-style-type: decimal; }
  .list--numbered li {
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.4; }

.list--circled {
  list-style-type: circle; }
  .list--circled li {
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.4; }

.list--squared {
  list-style-type: square; }
  .list--squared li {
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.4; }

.list--lower-abc {
  list-style-type: lower-latin; }
  .list--lower-abc li {
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.4; }

.list--upper-abc {
  list-style-type: upper-latin; }
  .list--upper-abc li {
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.4; }

.list--circle {
  list-style: none;
  padding-left: 24px; }
  .list--circle li {
    position: relative;
    margin-bottom: 10px;
    margin-bottom: 0.625rem;
    line-height: 1.414; }
  .list--circle li:before {
    position: absolute;
    left: -24px;
    top: 8px;
    width: 8px;
    height: 8px;
    background-color: #f7544c;
    border-radius: 16px;
    content: ''; }

/*
A list doesn't always appear vetically so there are a couple of hortizontal list styles 
below that can be added by assiging a class.
*/
.list--inline, .list--pills {
  float: left;
  width: 100%; }
  .list--inline li, .list--pills li {
    display: inline-block; }

.list--pills {
  margin-bottom: 0; }
  .list--pills li, .list--pills li a {
    margin-right: 3px;
    margin-right: 0.1875rem;
    margin-bottom: 8px;
    margin-bottom: 0.5rem;
    padding: 8px;
    padding: 0.5rem;
    background: #FEEFEE;
    border-radius: 4px;
    display: inline-block;
    text-decoration: none;
    line-height: 1; }

.list--stacked li {
  display: block; }
  .list--stacked li a {
    display: block;
    text-decoration: none; }

.list--stacked .seperator {
  margin-top: 5px;
  margin-top: 0.3125rem;
  margin-bottom: 5px;
  margin-bottom: 0.3125rem;
  border-bottom: 1px solid #f6f6f6; }

.list--stacked .title {
  padding-top: 5px;
  padding-top: 0.3125rem;
  padding-bottom: 5px;
  padding-bottom: 0.3125rem;
  font-size: 16px;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.15;
  font-weight: 700; }

/* 
------------
OBJECT.
SECTIONS
------------ 
*/
.section--padded {
  padding-top: 20px;
  padding-top: 1.25rem;
  padding-bottom: 20px;
  padding-bottom: 1.25rem; }

/* 
------------
OBJECTS.
TABLES
------------ 
*/
th, td {
  padding: 10px;
  border: 1px solid #f6f6f6; }

caption {
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

/* 
------------
COMPONENTS.
------------ 
The components files are the UI styling files. You can create UI blocks with more specificty within this collect of files e.g. you may wish to create a new set of buttons for your project. You can either do this by adding a new class within the buttons.scss file or by creating a new file that is for a specific UI component on your website.
------------
*/
/* 
------------
COMPONENTS.
BADGES
------------ 
*/
.badge {
  padding: 5px;
  padding: 0.3125rem;
  font-size: 70%;
  margin-right: 0;
  font-weight: bold; }

.badge--smooth {
  border-radius: 5px; }

.badge--rounded {
  border-radius: 50px; }

.badge--success {
  background: #68d68d;
  color: #fff;
  border: none; }

.badge--error {
  background: #ff5666;
  color: #fff;
  border: none; }

.badge--attention {
  background: #ff6F59;
  color: #fff;
  border: none; }

.badge--neutral {
  background: #5DA9E9;
  color: #fff;
  border: none; }

/* 
------------
COMPONENTS.
BUTTONS
------------ 
*/
/**
*
* The Button (.button) Class
* -----------------------
*
* All buttons must include the .button class as this ensures that the basic 
* styling is applied.
*
*
*/
.button {
  float: left;
  font-size: 16px;
  font-size: 1rem; }
  .button:hover {
    background: #f63d34;
    color: #ffffff; }
  .button:active {
    background: #f5251b; }
  .button i {
    font-size: .9rem; }

/**
*
* Button Display Styles
* ---------------------
*
* The classes below are used to change the way that the button is displayed 
* physically e.g. the example below sets the button as disabled, preventing a 
* user from clicking it.
*
* [!] Usage Example
* -----------------
*
* <a class="button button--disabled">Button</a>
*
*
*/
.button--small {
  font-size: 12px;
  font-size: 0.75rem;
  padding: 5px;
  padding: 0.3125rem; }

.button--large {
  font-size: 24px;
  font-size: 1.5rem;
  padding: 20px;
  padding: 1.25rem; }

.button--x-large {
  font-size: 36px;
  font-size: 2.25rem;
  padding: 40px;
  padding: 2.5rem; }

.button--block {
  width: 100%; }

.button--rounded {
  border-radius: 50px; }

.button--bordered, .button-group--bordered .button {
  background: none;
  border: 3px solid #ddd; }

.button--disabled {
  color: #ddd;
  background: #f6f6f6; }
  .button--disabled:hover {
    cursor: not-allowed;
    background: #f6f6f6;
    color: #ddd; }

/**
*
* Button Groups
* -------------
*
* Button groups are a great way to provide a user with a selection of buttons 
* while keeping them within a cluster. This is particularly handy for 
* pagination.
*
* [!] Usage Example
* -----------------
*
* <div class="button-group">
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* </div>
*
*
*/
.button-group {
  float: left;
  display: inline-block;
  margin-bottom: 10px;
  margin-bottom: 0.625rem;
  margin-right: 10px;
  margin-right: 0.625rem; }

/**
*
* Button Group Styles
* -------------------
*
* The button group styles follow on the from the button styles. This enables
* you to assign the same styling achieved on the button styling without having
* to assign the class to each individual .button within the group. The example
* below would provide you with the smooth corners on the .button-group apposed to 
* each individual .button element.
*
* [!] Usage Example
* -----------------
*
* <div class="button-group button-group--smooth">
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* 	<a class="button">Button</a>
* </div>
*
*
*/
.button-group .button {
  margin: 0; }
  .button-group .button:not(:first-child) {
    border-left: 0; }

.button-group--smooth .button:first-child {
  border-radius: 5px 0px 0px 5px; }

.button-group--smooth .button:last-child {
  border-radius: 0px 5px 5px 0px; }

.button-group--rounded .button:first-child {
  border-radius: 50px 0px 0px 50px; }

.button-group--rounded .button:last-child {
  border-radius: 0px 50px 50px 0px; }

.button-group--bordered .button:hover {
  background: #ddd; }

/**
*
* Button Centered
* ---------------
* Centering a button can be quite useful and to help cater for that Frontly 
* has the class below:
*
* [!] Usage Example
* -----------------
* <div class="button--centered">
*     <a class="button">Button Centered</a>
* </div>
*
* - or -
*
* <div class="button--centered">
*     <div class="button-group">
*         <a class="button">Button Centered</a>
*         <a class="button">Button Centered</a>
*         <a class="button">Button Centered</a>
*     </div>
* </div>
*
*/
.button--centered {
  text-align: center;
  display: block; }
  .button--centered .button-group {
    float: none;
    margin: 0 auto; }
    .button--centered .button-group .button {
      float: left; }
  .button--centered .button {
    float: none;
    margin-right: 0; }

/**
*
* Buttons Colors
* --------------
*
* The button colors are a set of deafults and can be customised were required 
* by creating a new class e.g. .button--custom-class{ background: purple }. 
* The buttons utilise a number of color variables set in the 
* _settings.colors.scss file and it is recommended that if you wish to create 
* a custom .button that you create a variable in that file to call where required.
*
* [!] Usage Example
* -----------------
*
* <a class="button button--success">Button</a>
*
*
*/
.button--success {
  background: #68d68d;
  border-color: #40cb6f;
  color: #fff; }
  .button--success:hover {
    background: #40cb6f;
    color: #fff; }

.button--success.button--bordered, .button-group--bordered .button--success.button, .button--bordered.button--success, .button-group--bordered .button--success.button {
  border-color: #68d68d;
  color: #68d68d;
  background: none; }
  .button--success.button--bordered:hover, .button-group--bordered .button--success.button:hover, .button--bordered.button--success:hover, .button-group--bordered .button--success.button:hover {
    background: #68d68d;
    color: #fff; }

.button--error {
  background: #ff5666;
  border-color: #ff2338;
  color: #fff; }
  .button--error:hover {
    background: #ff2338;
    color: #fff; }

.button--error.button--bordered, .button-group--bordered .button--error.button, .button--bordered.button--error, .button-group--bordered .button--error.button {
  border-color: #ff5666;
  color: #ff5666;
  background: none; }
  .button--error.button--bordered:hover, .button-group--bordered .button--error.button:hover, .button--bordered.button--error:hover, .button-group--bordered .button--error.button:hover {
    background: #ff5666;
    color: #fff; }

.button--attention {
  background: #ff6F59;
  border-color: #ff4326;
  color: #fff; }
  .button--attention:hover {
    background: #ff4326;
    color: #fff; }

.button--attention.button--bordered, .button-group--bordered .button--attention.button, .button--bordered.button--attention, .button-group--bordered .button--attention.button {
  border-color: #ff6F59;
  color: #ff6F59;
  background: none; }
  .button--attention.button--bordered:hover, .button-group--bordered .button--attention.button:hover, .button--bordered.button--attention:hover, .button-group--bordered .button--attention.button:hover {
    background: #ff6F59;
    color: #fff; }

.button--neutral {
  background: #5DA9E9;
  border-color: #3091e3;
  color: #fff; }
  .button--neutral:hover {
    background: #3091e3;
    color: #fff; }

.button--neutral.button--bordered, .button-group--bordered .button--neutral.button, .button--bordered.button--neutral, .button-group--bordered .button--neutral.button {
  border-color: #5DA9E9;
  color: #5DA9E9;
  background: none; }
  .button--neutral.button--bordered:hover, .button-group--bordered .button--neutral.button:hover, .button--bordered.button--neutral:hover, .button-group--bordered .button--neutral.button:hover {
    background: #5DA9E9;
    color: #fff; }

/* 
------------
COMPONENTS.
EDUCATION
------------ 
*/
.education {
  border-top: 1px solid #f6f6f6;
  padding-top: 20px;
  padding-top: 1.25rem;
  padding-bottom: 20px;
  padding-bottom: 1.25rem; }

.education__details-list {
  margin-bottom: 0;
  display: block;
  margin-top: 10px;
  margin-top: 0.625rem; }
  .education__details-list dt {
    color: #8d8db8;
    font-weight: normal;
    margin-bottom: 5px;
    margin-bottom: 0.3125rem; }
  .education__details-list dd {
    margin-bottom: 20px;
    margin-bottom: 1.25rem; }
    .education__details-list dd:last-child {
      margin-bottom: 0; }

/* 
------------
COMPONENTS.
EXPERIENCE
------------ 
*/
.experience h3 {
  position: relative;
  margin-bottom: 64px; }
  .experience h3:after {
    position: absolute;
    bottom: -24px;
    left: 0;
    height: 8px;
    width: 48px;
    background-color: #FEEFEE;
    content: ''; }

.experience__list {
  float: left; }
  .experience__list h4 {
    color: #1B1B2B; }

.experience__list--item {
  position: relative; }
  .experience__list--item ul {
    margin-bottom: 48px;
    margin-bottom: 3rem; }
    .experience__list--item ul li {
      margin-bottom: 20px;
      margin-bottom: 1.25rem; }
  .experience__list--item:last-child ul {
    margin-bottom: 0; }

.job {
  margin-bottom: 20px;
  margin-bottom: 1.25rem; }

.job__role {
  font-size: 16px;
  font-size: 1rem;
  color: #9F9F9F;
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/* 
------------
COMPONENTS.
MAIN HEADER
------------ 
*/
.main-header {
  float: left;
  width: 100%;
  background: #252645;
  color: #fff;
  padding-top: 120px;
  padding-top: 7.5rem;
  padding-bottom: 184px;
  padding-bottom: 11.5rem; }
  @media only screen and (max-width: 960px) {
    .main-header {
      padding-bottom: 120px;
      padding-bottom: 7.5rem; } }
  @media only screen and (max-width: 749px) {
    .main-header {
      padding-top: 64px;
      padding-top: 4rem;
      padding-bottom: 64px;
      padding-bottom: 4rem; } }
  @media only screen and (max-width: small-screen) {
    .main-header {
      padding-top: 64px;
      padding-top: 4rem;
      padding-bottom: 64px;
      padding-bottom: 4rem; } }
  .main-header__title {
    position: relative;
    float: left;
    width: 50%; }
    .main-header__title h1 {
      text-transform: uppercase; }
    .main-header__title p {
      font-size: 20px;
      font-size: 1.25rem; }
    .main-header__title:after {
      position: absolute;
      bottom: -8px;
      left: 0;
      height: 8px;
      width: 48px;
      background-color: #50516A;
      content: ''; }
    @media only screen and (max-width: 750px) {
      .main-header__title {
        width: 100%;
        margin-bottom: 48px; } }
    @media only screen and (max-width: 650px) {
      .main-header__title h1 {
        font-size: 32px;
        font-size: 2rem; }
      .main-header__title p {
        font-size: 16px;
        font-size: 1rem; } }
  .main-header__contact {
    float: right;
    width: auto;
    padding: 16px;
    background-color: rgba(27, 27, 43, 0.5);
    border-radius: 4px; }
    .main-header__contact p {
      margin-bottom: 16px;
      line-height: 1; }
      .main-header__contact p:last-child {
        margin-bottom: 0; }
    @media only screen and (max-width: 750px) {
      .main-header__contact {
        float: left; } }
    @media only screen and (max-width: 749px) {
      .main-header__contact {
        width: 100%; } }
    @media only screen and (max-width: small-screen) {
      .main-header__contact {
        width: 100%; } }

/* 
------------
COMPONENTS.
INTRO
------------ 
*/
.intro {
  float: left;
  width: 100%;
  background: #1B1B2B; }
  .intro h1 {
    text-transform: uppercase; }
  .intro p {
    font-size: 16px;
    font-size: 1rem; }
  .intro__inner {
    width: calc(100% + 128px);
    padding: 80px 64px;
    margin-bottom: -64px;
    margin-left: -64px;
    margin-top: -64px;
    background-image: url("../../img/jordan_simpson_website.jpg");
    background-size: cover;
    background-position-x: right;
    background-position-y: 100%; }
    @media only screen and (max-width: 960px) {
      .intro__inner {
        background: none;
        margin: 0;
        padding: 0;
        width: 100%; } }
  .intro__content {
    position: relative;
    background-color: #ffffff;
    padding: 48px;
    border-radius: 4px;
    width: 40%; }
    .intro__content h3 {
      margin-bottom: 24px; }
    .intro__content p:last-child {
      margin-bottom: 0; }
    @media only screen and (max-width: 960px) {
      .intro__content {
        width: 100%;
        background-color: transparent;
        margin: 0;
        padding: 64px 0;
        color: #ffffff; } }
  .intro__image {
    display: none;
    height: 450px;
    background-image: url("../../img/jordan_simpson_website.jpg");
    background-size: cover;
    background-position-x: right; }
    @media only screen and (max-width: 960px) {
      .intro__image {
        display: block;
        width: calc(100% + 64px);
        margin-left: -32px; } }
    @media only screen and (max-width: 650px) {
      .intro__image {
        height: 300px; } }

/* 
------------
COMPONENTS.
MAIN DETAILS
------------ 
*/
.main-details {
  float: left;
  width: 100%;
  padding-top: 144px;
  padding-top: 9rem;
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-details__inner {
    display: -ms-flexbox;
    display: flex; }
    @media only screen and (max-width: 960px) {
      .main-details__inner {
        -ms-flex-direction: column;
        flex-direction: column; } }
    .main-details__inner article {
      -ms-flex: 1 0 60%;
      flex: 1 0 60%; }
      @media only screen and (max-width: 960px) {
        .main-details__inner article {
          -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
          margin-bottom: 48px; } }
    .main-details__inner aside {
      margin-left: 10%; }
      @media only screen and (max-width: 960px) {
        .main-details__inner aside {
          margin-left: 0; } }
  .main-details .list--pills {
    font-size: 14px;
    font-size: 0.875rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

/* 
------------
COMPONENTS.
RECENT WORK
------------ 
*/
.recent-work {
  float: left;
  width: 100%;
  background-color: #252645;
  color: #fff;
  padding-top: 120px;
  padding-top: 7.5rem; }
  @media only screen and (max-width: 749px) {
    .recent-work {
      padding-top: 64px;
      padding-top: 4rem; } }
  @media only screen and (max-width: small-screen) {
    .recent-work {
      padding-top: 64px;
      padding-top: 4rem; } }
  .recent-work__title {
    float: left;
    width: 100%;
    margin-bottom: 120px; }
    .recent-work__title h3 {
      color: #ffffff;
      position: relative; }
      .recent-work__title h3:after {
        position: absolute;
        width: 48px;
        height: 8px;
        background-color: #50516A;
        left: 0;
        bottom: -24px;
        content: ''; }
  .recent-work__block {
    float: left;
    width: 100%;
    margin-bottom: 120px; }
  .recent-work__block--inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
    -ms-flex-align: end;
    align-items: flex-end; }
    @media only screen and (max-width: 960px) {
      .recent-work__block--inner {
        -ms-flex-direction: column;
        flex-direction: column; } }
    .recent-work__block--inner .content {
      width: 385px; }
      .recent-work__block--inner .content .button {
        margin-top: 24px; }
      @media only screen and (max-width: 960px) {
        .recent-work__block--inner .content {
          width: 100%; } }
    .recent-work__block--inner .images {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-negative: 1;
      flex-shrink: 1;
      -ms-flex-align: end;
      align-items: flex-end;
      width: 690px;
      margin-left: 10%; }
      .recent-work__block--inner .images img {
        max-width: 100%;
        height: auto;
        margin-bottom: 0; }
      .recent-work__block--inner .images .push {
        margin-left: 24px; }
      @media only screen and (max-width: 960px) {
        .recent-work__block--inner .images {
          width: 100%;
          margin-left: 0;
          margin-bottom: 32px; }
          .recent-work__block--inner .images img {
            float: left;
            width: 100%; } }
  .recent-work__info {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    margin-top: 48px;
    padding-bottom: 48px;
    border-bottom: 2px dotted #50516A; }
    @media only screen and (max-width: 960px) {
      .recent-work__info {
        -ms-flex-direction: column;
        flex-direction: column;
        padding-bottom: 24px; } }
    .recent-work__info .info-block {
      width: calc((100% / 3) - 16px);
      padding-top: 16px;
      border-top: 8px solid #50516A; }
      @media only screen and (max-width: 960px) {
        .recent-work__info .info-block {
          width: 100%;
          margin-bottom: 32px; } }
      .recent-work__info .info-block p {
        margin-bottom: 0; }

/* 
------------
COMPONENTS.
MAIN FOOTER
------------ 
*/
.main-footer {
  float: left;
  width: 100%;
  background-color: #1B1B2B;
  color: #fff;
  padding-top: 48px;
  padding-top: 3rem;
  padding-bottom: 48px;
  padding-bottom: 3rem; }
  .main-footer__title {
    float: left;
    color: #ffffff;
    font-weight: 400; }
    .main-footer__title--name {
      text-transform: uppercase;
      color: #f7544c;
      font-weight: 900; }
      @media only screen and (max-width: 650px) {
        .main-footer__title--name {
          float: left;
          width: 100%;
          margin-bottom: 16px; } }
  .main-footer__contact {
    float: right;
    margin-top: 4px; }
    @media only screen and (max-width: 1024px) {
      .main-footer__contact {
        float: left;
        clear: left;
        margin-top: 24px; } }
    .main-footer__contact--detail {
      display: inline-block;
      margin-left: 16px; }
      @media only screen and (max-width: 1024px) {
        .main-footer__contact--detail {
          margin-left: 0;
          margin-right: 16px;
          margin-bottom: 16px; } }

/* 
------------
VETOS.
------------
The vetos files, a.k.a the naughty files, consist of the additional overriding classes that you may need to utilise or add should you need a specific class changed based on a certain sitiation e.g. you can utilise the .float--right veto class to float a .btn element to the right within having to create a 
.btn--right class and causing duplication of a styling method.
------------ 
*/
/* 
------------
VETOS.
HELPERS

a.k.a
THE 
GUILTY FILE
------------ 
*/
/**
*
* This is the guilty file that keeps all the little helper classes contained.
* These classes enable you to override any pre-existing styling where required.
*
* They shouldn't be used where the styling can be added to an element within a 
* css file but we all know that we don't live in an ideal world and quick 
* protoyping can be important, so adding a little classes temporarily can be 
* useful.
*
*/
/**
*
* Floats
* ----------
* Floating elements should be set within your CSS but this can't always be 
* possible. The classes below enable you to set the float of an element.
* 
*/
.float--left {
  float: left !important; }

.float--right {
  float: right !important; }

.float--none {
  float: none !important; }

/**
*
* Margins & Padding
* -----------------
* Floating elements should be set within your CSS but this can't always be 
* possible. The classes below enable you to set the float of an element.
* 
*/
/**
* Directions Sass List
*/
/**
* Margins
*/
.push--top {
  margin-top: 10px;
  margin-top: 0.625rem; }

.push--right {
  margin-right: 10px;
  margin-right: 0.625rem; }

.push--bottom {
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }

.push--left {
  margin-left: 10px;
  margin-left: 0.625rem; }

.push-dbl--top {
  margin-top: 20px;
  margin-top: 1.25rem; }

.push-dbl--right {
  margin-right: 20px;
  margin-right: 1.25rem; }

.push-dbl--bottom {
  margin-bottom: 20px;
  margin-bottom: 1.25rem; }

.push-dbl--left {
  margin-left: 20px;
  margin-left: 1.25rem; }

/**
* Padding
*/
.pad--top {
  padding-top: 10px;
  padding-top: 0.625rem; }

.pad--right {
  padding-right: 10px;
  padding-right: 0.625rem; }

.pad--bottom {
  padding-bottom: 10px;
  padding-bottom: 0.625rem; }

.pad--left {
  padding-left: 10px;
  padding-left: 0.625rem; }

.pad-dbl--top {
  padding-top: 20px;
  padding-top: 1.25rem; }

.pad-dbl--right {
  padding-right: 20px;
  padding-right: 1.25rem; }

.pad-dbl--bottom {
  padding-bottom: 20px;
  padding-bottom: 1.25rem; }

.pad-dbl--left {
  padding-left: 20px;
  padding-left: 1.25rem; }

/**
*
* Font Weights
* ------------
* The font weight over classes below can sometimes become quite useful, as 
* shown in the example below:
*
* [!] Usage Example
* -----------------
* <h1>Font Weight <span class="font-weight--normal">override</span></h1>
* 
*/
.font-weight--light {
  font-weight: 100 !important; }

.font-weight--normal {
  font-weight: 400 !important; }

.font-weight--heavy {
  font-weight: 700 !important; }

/**
*
* Text Alignment
* --------------
* The alignment of text set by a parent class/style sometimes needs to be
* overridden. You can achieve that by using once of the classes below:
*
* [!] Usage Example
* -----------------
* <p class="align--right">Text aligned right</p>
* <p class="align--center">Text aligned center</p>
* <p class="align--left">Text aligned left</p>
* 
*/
.align--left {
  text-align: left !important; }

.align--center {
  text-align: center !important; }

.align--right {
  text-align: right !important; }

/**
*
* Hidding Elements
* ----------------
* Hiding elements can be useful when working with a repsonsive design. It 
* enables you to add and remove elements depending on the viewport easily.
* The classes below enable you to do just that, as shown in the example below:
*
* [!] Usage Example
* -----------------
* <div class="hidden display--tablet">
*     <p>Hey, you can only see me on a tablet device!</p>
* </div>
* 
*/
.hidden {
  display: none !important; }

/**
* Hide or display elements on tablet devices
*/
@media only screen and (max-width: 959px) {
  .display--tablet {
    display: block !important; }
  .hidden--tablet {
    display: none !important; } }

@media only screen and (max-width: medium-screen) {
  .display--tablet {
    display: block !important; }
  .hidden--tablet {
    display: none !important; } }

/**
* Hide or display elements on mobile devices
*/
@media only screen and (max-width: 749px) {
  .display--mobile {
    display: block !important; }
  .hidden--mobile {
    display: none !important; } }

@media only screen and (max-width: small-screen) {
  .display--mobile {
    display: block !important; }
  .hidden--mobile {
    display: none !important; } }
